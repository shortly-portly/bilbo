["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.input');\ngoog.require('cljs.core');\ngoog.require('reagent.impl.component');\ngoog.require('reagent.impl.batching');\ngoog.require('reagent.impl.protocols');\nreagent.impl.input.these_inputs_have_selection_api = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [\"url\",null,\"tel\",null,\"text\",null,\"textarea\",null,\"password\",null,\"search\",null], null), null);\nreagent.impl.input.has_selection_api_QMARK_ = (function reagent$impl$input$has_selection_api_QMARK_(input_type){\nreturn cljs.core.contains_QMARK_(reagent.impl.input.these_inputs_have_selection_api,input_type);\n});\nreagent.impl.input.input_node_set_value = (function reagent$impl$input$input_node_set_value(node,rendered_value,dom_value,component,p__27689){\nvar map__27690 = p__27689;\nvar map__27690__$1 = (((((!((map__27690 == null))))?(((((map__27690.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__27690.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__27690):map__27690);\nvar on_write = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27690__$1,new cljs.core.Keyword(null,\"on-write\",\"on-write\",31519475));\nif((!((((node === document.activeElement)) && (reagent.impl.input.has_selection_api_QMARK_(node.type)) && (typeof rendered_value === 'string') && (typeof dom_value === 'string'))))){\n(component.cljsDOMValue = rendered_value);\n\n(node.value = rendered_value);\n\nif(cljs.core.fn_QMARK_(on_write)){\nreturn (on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\n} else {\nreturn null;\n}\n} else {\nvar node_value = node.value;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(node_value,dom_value)){\nreturn reagent.impl.batching.do_after_render((function (){\nreturn (reagent.impl.input.input_component_set_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.input.input_component_set_value.cljs$core$IFn$_invoke$arity$1(component) : reagent.impl.input.input_component_set_value.call(null,component));\n}));\n} else {\nvar existing_offset_from_end = (cljs.core.count(node_value) - node.selectionStart);\nvar new_cursor_offset = (cljs.core.count(rendered_value) - existing_offset_from_end);\n(component.cljsDOMValue = rendered_value);\n\n(node.value = rendered_value);\n\nif(cljs.core.fn_QMARK_(on_write)){\n(on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\n} else {\n}\n\n(node.selectionStart = new_cursor_offset);\n\nreturn (node.selectionEnd = new_cursor_offset);\n}\n}\n});\nreagent.impl.input.input_component_set_value = (function reagent$impl$input$input_component_set_value(this$){\nif(cljs.core.truth_(this$.cljsInputLive)){\n(this$.cljsInputDirty = false);\n\nvar rendered_value = this$.cljsRenderedValue;\nvar dom_value = this$.cljsDOMValue;\nvar node = this$.inputEl;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(rendered_value,dom_value)){\nreturn reagent.impl.input.input_node_set_value(node,rendered_value,dom_value,this$,cljs.core.PersistentArrayMap.EMPTY);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\nreagent.impl.input.input_handle_change = (function reagent$impl$input$input_handle_change(this$,on_change,e){\n(this$.cljsDOMValue = e.target.value);\n\nif(cljs.core.truth_(this$.cljsInputDirty)){\n} else {\n(this$.cljsInputDirty = true);\n\nreagent.impl.batching.do_after_render((function (){\nreturn reagent.impl.input.input_component_set_value(this$);\n}));\n}\n\nreturn (on_change.cljs$core$IFn$_invoke$arity$1 ? on_change.cljs$core$IFn$_invoke$arity$1(e) : on_change.call(null,e));\n});\nreagent.impl.input.input_render_setup = (function reagent$impl$input$input_render_setup(this$,jsprops){\nif(cljs.core.truth_((((!((jsprops == null))))?(function (){var and__4115__auto__ = jsprops.hasOwnProperty(\"onChange\");\nif(cljs.core.truth_(and__4115__auto__)){\nreturn jsprops.hasOwnProperty(\"value\");\n} else {\nreturn and__4115__auto__;\n}\n})():false))){\nvar v = jsprops.value;\nvar value = (((v == null))?\"\":v);\nvar on_change = jsprops.onChange;\nvar original_ref_fn = jsprops.ref;\nif(cljs.core.truth_(this$.cljsInputLive)){\n} else {\n(this$.cljsInputLive = true);\n\n(this$.cljsDOMValue = value);\n}\n\nif(cljs.core.truth_(this$.reagentRefFn)){\n} else {\n(this$.reagentRefFn = (function (el){\n(this$.inputEl = el);\n\nif(cljs.core.truth_(original_ref_fn)){\nreturn original_ref_fn(el);\n} else {\nreturn null;\n}\n}));\n}\n\n(this$.cljsRenderedValue = value);\n\ndelete jsprops[\"value\"];\n\n(jsprops.defaultValue = value);\n\n(jsprops.onChange = (function (p1__27699_SHARP_){\nreturn reagent.impl.input.input_handle_change(this$,on_change,p1__27699_SHARP_);\n}));\n\nreturn (jsprops.ref = this$.reagentRefFn);\n} else {\nreturn null;\n}\n});\nreagent.impl.input.input_unmount = (function reagent$impl$input$input_unmount(this$){\nreturn (this$.cljsInputLive = null);\n});\nreagent.impl.input.input_component_QMARK_ = (function reagent$impl$input$input_component_QMARK_(x){\nvar G__27703 = x;\nswitch (G__27703) {\ncase \"input\":\ncase \"textarea\":\nreturn true;\n\nbreak;\ndefault:\nreturn false;\n\n}\n});\nreagent.impl.input.input_spec = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"display-name\",\"display-name\",694513143),\"ReagentInput\",new cljs.core.Keyword(null,\"component-did-update\",\"component-did-update\",-1468549173),reagent.impl.input.input_component_set_value,new cljs.core.Keyword(null,\"component-will-unmount\",\"component-will-unmount\",-2058314698),reagent.impl.input.input_unmount,new cljs.core.Keyword(null,\"reagent-render\",\"reagent-render\",-985383853),(function (argv,component,jsprops,first_child,compiler){\nvar this$ = reagent.impl.component._STAR_current_component_STAR_;\nreagent.impl.input.input_render_setup(this$,jsprops);\n\nreturn reagent.impl.protocols.make_element(compiler,argv,component,jsprops,first_child);\n})], null);\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/input.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",23],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$reagent.impl.input","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.component","^I","~$comp","^I","~$reagent.impl.batching","^K","~$batch","^K","~$reagent.impl.protocols","^M","~$p","^M","~$cljs.core","^N","~$goog","^O"],"~:seen",["^B",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^N","^N"],"~:form",["~#list",["~$ns","^D",["^U",["^Q",["^I","~:as","^J"],["^K","^W","^L"],["^M","^W","~$p"]]]]],"~:flags",["^ ","^Q",["^B",[]]],"~:js-deps",["^ "],"~:deps",["^O","^N","^I","^K","^M"]],"^F","^D","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/input.cljs"],"~:compiled-at",1590910807697,"~:resource-name","reagent/impl/input.cljs","~:warnings",[],"~:source","(ns reagent.impl.input\n  (:require [reagent.impl.component :as comp]\n            [reagent.impl.batching :as batch]\n            [reagent.impl.protocols :as p]))\n\n;; <input type=\"??\" >\n;; The properites 'selectionStart' and 'selectionEnd' only exist on some inputs\n;; See: https://html.spec.whatwg.org/multipage/forms.html#do-not-apply\n(def these-inputs-have-selection-api #{\"text\" \"textarea\" \"password\" \"search\"\n                                       \"tel\" \"url\"})\n\n(defn ^boolean has-selection-api?\n  [input-type]\n  (contains? these-inputs-have-selection-api input-type))\n\n(declare input-component-set-value)\n\n(defn input-node-set-value\n  [node rendered-value dom-value ^clj component {:keys [on-write]}]\n  (if-not (and (identical? node (.-activeElement js/document))\n            (has-selection-api? (.-type node))\n            (string? rendered-value)\n            (string? dom-value))\n    ;; just set the value, no need to worry about a cursor\n    (do\n      (set! (.-cljsDOMValue component) rendered-value)\n      (set! (.-value node) rendered-value)\n      (when (fn? on-write)\n        (on-write rendered-value)))\n\n    ;; Setting \"value\" (below) moves the cursor position to the\n    ;; end which gives the user a jarring experience.\n    ;;\n    ;; But repositioning the cursor within the text, turns out to\n    ;; be quite a challenge because changes in the text can be\n    ;; triggered by various events like:\n    ;; - a validation function rejecting a user inputted char\n    ;; - the user enters a lower case char, but is transformed to\n    ;;   upper.\n    ;; - the user selects multiple chars and deletes text\n    ;; - the user pastes in multiple chars, and some of them are\n    ;;   rejected by a validator.\n    ;; - the user selects multiple chars and then types in a\n    ;;   single new char to repalce them all.\n    ;; Coming up with a sane cursor repositioning strategy hasn't\n    ;; been easy ALTHOUGH in the end, it kinda fell out nicely,\n    ;; and it appears to sanely handle all the cases we could\n    ;; think of.\n    ;; So this is just a warning. The code below is simple\n    ;; enough, but if you are tempted to change it, be aware of\n    ;; all the scenarios you have handle.\n    (let [node-value (.-value node)]\n      (if (not= node-value dom-value)\n        ;; IE has not notified us of the change yet, so check again later\n        (batch/do-after-render #(input-component-set-value component))\n        (let [existing-offset-from-end (- (count node-value)\n                                         (.-selectionStart node))\n              new-cursor-offset        (- (count rendered-value)\n                                         existing-offset-from-end)]\n          (set! (.-cljsDOMValue component) rendered-value)\n          (set! (.-value node) rendered-value)\n          (when (fn? on-write)\n            (on-write rendered-value))\n          (set! (.-selectionStart node) new-cursor-offset)\n          (set! (.-selectionEnd node) new-cursor-offset))))))\n\n(defn input-component-set-value [^clj this]\n  (when (.-cljsInputLive this)\n    (set! (.-cljsInputDirty this) false)\n    (let [rendered-value (.-cljsRenderedValue this)\n          dom-value (.-cljsDOMValue this)\n          ;; Default to the root node within this component\n          node (.-inputEl this)]\n      (when (not= rendered-value dom-value)\n        (input-node-set-value node rendered-value dom-value this {})))))\n\n(defn input-handle-change [^clj this on-change e]\n  (set! (.-cljsDOMValue this) (-> e .-target .-value))\n  ;; Make sure the input is re-rendered, in case on-change\n  ;; wants to keep the value unchanged\n  (when-not (.-cljsInputDirty this)\n    (set! (.-cljsInputDirty this) true)\n    (batch/do-after-render #(input-component-set-value this)))\n  (on-change e))\n\n(defn input-render-setup\n  [^clj this ^js jsprops]\n  ;; Don't rely on React for updating \"controlled inputs\", since it\n  ;; doesn't play well with async rendering (misses keystrokes).\n  (when (and (some? jsprops)\n             (.hasOwnProperty jsprops \"onChange\")\n             (.hasOwnProperty jsprops \"value\"))\n    (let [v (.-value jsprops)\n          value (if (nil? v) \"\" v)\n          on-change (.-onChange jsprops)\n          original-ref-fn (.-ref jsprops)]\n      (when-not (.-cljsInputLive this)\n        ;; set initial value\n        (set! (.-cljsInputLive this) true)\n        (set! (.-cljsDOMValue this) value))\n      (when-not (.-reagentRefFn this)\n        (set! (.-reagentRefFn this) (fn [el]\n                                      (set! (.-inputEl this) el)\n                                      (when original-ref-fn\n                                        (original-ref-fn el)))))\n      (set! (.-cljsRenderedValue this) value)\n      (js-delete jsprops \"value\")\n      (set! (.-defaultValue jsprops) value)\n      (set! (.-onChange jsprops) #(input-handle-change this on-change %))\n      (set! (.-ref jsprops) (.-reagentRefFn this)))))\n\n(defn input-unmount [^clj this]\n  (set! (.-cljsInputLive this) nil))\n\n(defn ^boolean input-component? [x]\n  (case x\n    (\"input\" \"textarea\") true\n    false))\n\n(def input-spec\n  {:display-name \"ReagentInput\"\n   :component-did-update input-component-set-value\n   :component-will-unmount input-unmount\n   :reagent-render\n   (fn [argv component jsprops first-child compiler]\n     (let [this comp/*current-component*]\n       (input-render-setup this jsprops)\n       (p/make-element compiler argv component jsprops first-child)))})\n","~:reader-features",["^B",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.impl.input/these-inputs-have-selection-api","reagent.impl.input/has-selection-api?","input-type","cljs.core/contains?","p__27689","map__27690","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","reagent.impl.input/input-node-set-value","node","rendered-value","dom-value","component","on-write","js/document","cljs.core/fn?","node-value","cljs.core.not_EQ_","reagent.impl.batching/do-after-render","reagent.impl.input/input-component-set-value","existing-offset-from-end","cljs.core/count","new-cursor-offset","this","reagent.impl.input/input-handle-change","on-change","e","reagent.impl.input/input-render-setup","jsprops","and__4115__auto__","v","value","original-ref-fn","el","p1__27699#","reagent.impl.input/input-unmount","reagent.impl.input/input-component?","x","G__27703","reagent.impl.input/input-spec","argv","first-child","compiler","reagent.impl.component/*current-component*","reagent.impl.protocols/make-element"]],"~:used-vars",["^B",["~$js/document","~$reagent.impl.protocols/make-element","~$reagent.impl.input/these-inputs-have-selection-api","~$reagent.impl.input/input-node-set-value","~$cljs.core/not=","~$reagent.impl.input/input-unmount","~$cljs.core/contains?","~$reagent.impl.input/input-handle-change","~$cljs.core/fn?","~$reagent.impl.input/input-spec","~$cljs.core/not","~$reagent.impl.input/has-selection-api?","~$reagent.impl.input/input-component?","~$reagent.impl.batching/do-after-render","~$reagent.impl.input/input-render-setup","~$reagent.impl.input/input-component-set-value"]]],"~:cache-keys",["~#cmap",[["^10","reagent/impl/batching.cljs"],["71172e9be671755156730f86af647b7c667093fa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^B",[]],"~:deps-syms",["^O","^N","~$reagent.debug","~$reagent.impl.util"]]],["^10","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","~$goog.dom.HtmlElement"]]],["^10","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","~$goog.array","~$goog.asserts"]]],["^10","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O"]]],["^10","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1U","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^10","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1V","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^1Y"]]],["^10","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1V"]]],["~:shadow.build.npm/resource","node_modules/prop-types/checkPropTypes.js"],[1590823159000,1590823159000,1549836454000,"^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^10","reagent/impl/util.cljs"],["71172e9be671755156730f86af647b7c667093fa","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^N","~$clojure.string","~$clojure.walk","^1X","^1R"]]],["^10","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O"]]],["^10","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O"]]],["^10","reagent/ratom.cljs"],["71172e9be671755156730f86af647b7c667093fa","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^N","^1S","^1R","^K","~$clojure.set","^1X"]]],["^10","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O"]]],["^24","node_modules/react/index.js"],[1590823159000,1590823159000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^25","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^10","shadow/js.js"],["1564aca58f589b787b736c46f06f0eacd4e72c6d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O"]]],["^10","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O"]]],["^10","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1V"]]],"~:SHADOW-TIMESTAMP",[1590823159000,1590823159000,1590091154000],["^24","node_modules/react/cjs/react.development.js"],[1590823159000,1590823159000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^25","~$module$node_modules$object_assign$index","~$module$node_modules$prop_types$checkPropTypes"]]],["^10","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1V","~$goog.reflect"]]],["^10","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1V","~$goog.html.trustedtypes","^20","^21","^22","^23"]]],["^10","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O"]]],["^10","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O"]]],["^10","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1U","^1V","~$goog.html.SafeUrl","^22","^23","^1Y"]]],["^10","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1V","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2A","^1[","~$goog.html.uncheckedconversions","^22","^1Y"]]],["^10","reagent/impl/component.cljs"],["71172e9be671755156730f86af647b7c667093fa","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^N","^1X","^?","^1S","^K","^M","~$reagent.ratom","^1R"]]],["^10","clojure/walk.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^N"]]],["^10","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^10","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1U","^1V","~$goog.dom.TagName","~$goog.dom.tags","^2E","^2F","~$goog.html.SafeStyleSheet","^2A","^1[","^2@","^20","^21","~$goog.labs.userAgent.browser","^1X","^22","^23","^1Y"]]],["^10","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1X"]]],["^10","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^10","reagent/impl/protocols.cljs"],["71172e9be671755156730f86af647b7c667093fa","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^N"]]],["^10","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1U","^1V","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^10","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O"]]],["^24","node_modules/object-assign/index.js"],[1590823159000,1590823159000,1484580833000,"^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^25"]]],["^10","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O"]]],["^10","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",[]]],["^10","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1U","^1X"]]],["^10","clojure/string.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^N","^2Q","~$goog.string.StringBuffer"]]],["^24","node_modules/react/cjs/react.production.min.js"],[1590823159000,1590823159000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^25","^2="]]],["^10","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","~$goog.dom.safe","^2G","^22","^1Y"]]],["^10","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O"]]],["^10","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1Y"]]],["^10","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O"]]],["^10","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1U","^1V","^2C","~$goog.math"]]],["^10","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1V","^2D","^2E","^2F","^2M","^2A","^1[","^22","^1Y"]]],["^24","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1590823159000,1590823159000,1549571078000,"^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^25"]]],["^10","reagent/impl/input.cljs"],["71172e9be671755156730f86af647b7c667093fa","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^N","^I","^K","^M"]]],["^10","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O"]]],["^10","cljs/core.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","~$goog.math.Long","~$goog.math.Integer","^2Q","^1X","^1U","~$goog.Uri","^2W"]]],["^10","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1V","^2@","^22","^23"]]],["^10","reagent/debug.cljs"],["71172e9be671755156730f86af647b7c667093fa","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^N"]]],["^10","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1U","^1V","^2F","^1X","^22","^23","^1Y"]]],["^10","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^2?"]]],["^10","clojure/set.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^N"]]],["^10","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1U","^1V","^2Q"]]],["^10","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1N",["^ ","^1O",null,"^1P",["^B",[]],"^1Q",["^O","^1V","^23"]]]]],"~:clj-info",["^ ","jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/env.cljc",1590091154000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1588197276000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1588107710000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/analyzer.cljc",1590091154000,"jar:file:/Users/davidsimmons/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/ratom.clj",1590513942000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64.clj",1590091154000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1588107710000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/js_deps.cljc",1590091154000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1588197276000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1588107710000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1588197276000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map.clj",1590091154000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/compiler.cljc",1590091154000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/util.cljc",1590091154000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/externs.clj",1590091154000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64_vlq.clj",1590091154000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/core.cljc",1590091154000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1588107710000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1590091149000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1588197276000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1588107710000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/tagged_literals.cljc",1590091154000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1588107710000,"jar:file:/Users/davidsimmons/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/interop.clj",1590513942000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1588197276000,"jar:file:/Users/davidsimmons/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/debug.clj",1590513942000,"jar:file:/Users/davidsimmons/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1588107710000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/input.cljs","^7",1,"^8",5,"^9",1,"^:",23],"^;",["^ ","^<","^=","^>","^?"],"^@",null,"^A",["^B",[]],"~:shadow/js-access-properties",["^B",["onChange"]],"^C","^D","^G",null,"^H",["^ ","^I","^I","^J","^I","^K","^K","^L","^K","^M","^M","~$p","^M","^N","^N","^O","^O"],"^P",["^B",["^Q"]],"~:shadow/js-access-global",["^B",["document"]],"^R",null,"~:defs",["^ ","~$has-selection-api?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/input.cljs","^7",12,"^8",16,"^9",12,"^:",34,"~:tag","~$boolean","~:arglists",["^U",["~$quote",["^U",[["~$input-type"]]]]]],"^C","^1G","^6","reagent/impl/input.cljs","^:",34,"~:method-params",["^U",[["^3W"]]],"~:protocol-impl",null,"~:arglists-meta",["^U",[null,null]],"^8",1,"~:variadic?",false,"^7",12,"~:ret-tag","^3T","^9",12,"~:max-fixed-arity",1,"^3S","^3T","~:fn-var",true,"^3U",["^U",["^3V",["^U",[["^3W"]]]]]],"~$input-component?",["^ ","^3R",null,"^5",["^ ","^6","reagent/impl/input.cljs","^7",115,"^8",16,"^9",115,"^:",32,"^3S","^3T","^3U",["^U",["^3V",["^U",[["~$x"]]]]]],"^C","^1H","^6","reagent/impl/input.cljs","^:",32,"^3X",["^U",[["~$x"]]],"^3Y",null,"^3Z",["^U",[null,null]],"^8",1,"^3[",false,"^7",115,"^40","^3T","^9",115,"^41",1,"^3S","^3T","^42",true,"^3U",["^U",["^3V",["^U",[["~$x"]]]]]],"~$input-render-setup",["^ ","^3R",null,"^5",["^ ","^6","reagent/impl/input.cljs","^7",86,"^8",7,"^9",86,"^:",25,"^3U",["^U",["^3V",["^U",[["~$this","~$jsprops"]]]]]],"^C","^1J","^6","reagent/impl/input.cljs","^:",25,"^3X",["^U",[["^45","^46"]]],"^3Y",null,"^3Z",["^U",[null,null]],"^8",1,"^3[",false,"^7",86,"^40",["^B",[null,"~$clj-nil"]],"^9",86,"^41",2,"^42",true,"^3U",["^U",["^3V",["^U",[["^45","^46"]]]]]],"~$input-component-set-value",["^ ","^3R",null,"^5",["^ ","^6","reagent/impl/input.cljs","^7",67,"^8",7,"^9",67,"^:",32,"^3U",["^U",["^3V",["^U",[["^45"]]]]]],"^C","^1K","^6","reagent/impl/input.cljs","^:",32,"^3X",["^U",[["^45"]]],"^3Y",null,"^3Z",["^U",[null,null]],"^8",1,"^3[",false,"^7",67,"^40",["^B",[null,"~$any","^47"]],"^9",67,"^41",1,"^42",true,"^3U",["^U",["^3V",["^U",[["^45"]]]]]],"~$input-node-set-value",["^ ","^3R",null,"^5",["^ ","^6","reagent/impl/input.cljs","^7",18,"^8",7,"^9",18,"^:",27,"^3U",["^U",["^3V",["^U",[["~$node","~$rendered-value","~$dom-value","~$component",["^ ","~:keys",["~$on-write"]]]]]]]],"^C","^1?","^6","reagent/impl/input.cljs","^:",27,"^3X",["^U",[["^4;","^4<","^4=","^4>","~$p__27689"]]],"^3Y",null,"^3Z",["^U",[null,null]],"^8",1,"^3[",false,"^7",18,"^40",["^B",[null,"^49","^47"]],"^9",18,"^41",5,"^42",true,"^3U",["^U",["^3V",["^U",[["^4;","^4<","^4=","^4>",["^ ","^4?",["^4@"]]]]]]]],"~$input-unmount",["^ ","^3R",null,"^5",["^ ","^6","reagent/impl/input.cljs","^7",112,"^8",7,"^9",112,"^:",20,"^3U",["^U",["^3V",["^U",[["^45"]]]]]],"^C","^1A","^6","reagent/impl/input.cljs","^:",20,"^3X",["^U",[["^45"]]],"^3Y",null,"^3Z",["^U",[null,null]],"^8",1,"^3[",false,"^7",112,"^9",112,"^41",1,"^42",true,"^3U",["^U",["^3V",["^U",[["^45"]]]]]],"~$input-handle-change",["^ ","^3R",null,"^5",["^ ","^6","reagent/impl/input.cljs","^7",77,"^8",7,"^9",77,"^:",26,"^3U",["^U",["^3V",["^U",[["^45","~$on-change","~$e"]]]]]],"^C","^1C","^6","reagent/impl/input.cljs","^:",26,"^3X",["^U",[["^45","^4D","~$e"]]],"^3Y",null,"^3Z",["^U",[null,null]],"^8",1,"^3[",false,"^7",77,"^40","^49","^9",77,"^41",3,"^42",true,"^3U",["^U",["^3V",["^U",[["^45","^4D","~$e"]]]]]],"~$input-spec",["^ ","^C","^1E","^6","reagent/impl/input.cljs","^7",120,"^8",1,"^9",120,"^:",16,"^5",["^ ","^6","reagent/impl/input.cljs","^7",120,"^8",6,"^9",120,"^:",16],"^3S","~$cljs.core/IMap"],"~$these-inputs-have-selection-api",["^ ","^C","^1>","^6","reagent/impl/input.cljs","^7",9,"^8",1,"^9",9,"^:",37,"^5",["^ ","^6","reagent/impl/input.cljs","^7",9,"^8",6,"^9",9,"^:",37],"^3S","~$cljs.core/ISet"]],"^S",["^ ","^N","^N"],"~:cljs.analyzer/constants",["^ ","^P",["^B",["~:component-did-update","~:reagent-render","~:on-write","~:component-will-unmount","~:display-name"]],"~:order",["^4L","^4N","^4J","^4M","^4K"]],"^X",["^ ","^Q",["^B",[]]],"^Y",["^ "],"^Z",["^O","^N","^I","^K","^M"]],"^F","^D","~:ns-specs",["^ "],"~:ns-spec-vars",["^B",[]],"~:compiler-options",["^1M",[["^4R","~:static-fns"],true,["^4R","~:shadow-tweaks"],null,["^4R","~:source-map-inline"],null,["^4R","~:elide-asserts"],false,["^4R","~:optimize-constants"],null,["^4R","^13"],null,["^4R","~:external-config"],null,["^4R","~:tooling-config"],null,["^4R","~:emit-constants"],null,["^4R","~:load-tests"],null,["^4R","~:form-size-threshold"],null,["^4R","~:infer-externs"],true,["^4R","^15"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4R","~:fn-invoke-direct"],null,["^4R","~:source-map"],"/dev/null"]]]