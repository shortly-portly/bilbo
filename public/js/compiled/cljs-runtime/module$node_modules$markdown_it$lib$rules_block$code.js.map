{
"version":3,
"file":"module$node_modules$markdown_it$lib$rules_block$code.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAMjHD,MAAAC,QAAA,CAAiBC,QAAa,CAACC,KAAD,CAAQC,SAAR,CAAmBC,OAAnB,CAAwC,CAAA,IAChEC,QADgE,CACtDC,IAEd,IAAgD,CAAhD,CAAIJ,KAAAK,OAAA,CAAaJ,SAAb,CAAJ,CAA8BD,KAAAM,UAA9B,CAAqD,MAAO,CAAA,CAI5D,KAFAF,IAEA,CAFOD,QAEP,CAFkBF,SAElB,CAF8B,CAE9B,CAAOE,QAAP,CAAkBD,OAAlB,CAAA,CACE,GAAIF,KAAAO,QAAA,CAAcJ,QAAd,CAAJ,CACEA,QAAA,EADF,KAKA,IAAgD,CAAhD,EAAIH,KAAAK,OAAA,CAAaF,QAAb,CAAJ,CAA6BH,KAAAM,UAA7B,CACEH,QAAA,EACA,CAAAC,IAAA,CAAOD,QAFT,KAKA,MAGFH,MAAAQ,KAAA,CAAaJ,IAEbK,QAAA,CAAgBT,KAAAU,KAAA,CAAW,YAAX,CAAyB,MAAzB,CAAiC,CAAjC,CAChBD,QAAAE,QAAA,CAAgBX,KAAAY,SAAA,CAAeX,SAAf,CAA0BG,IAA1B;AAAgC,CAAhC,CAAoCJ,KAAAM,UAApC,CAAqD,CAAA,CAArD,CAChBG,QAAAI,IAAA,CAAgB,CAAEZ,SAAF,CAAaD,KAAAQ,KAAb,CAEhB,OAAO,CAAA,CA3B6D,CAN2C;",
"sources":["node_modules/markdown-it/lib/rules_block/code.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$markdown_it$lib$rules_block$code\"] = function(global,require,module,exports) {\n// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","state","startLine","endLine","nextLine","last","sCount","blkIndent","isEmpty","line","token","push","content","getLines","map"]
}
