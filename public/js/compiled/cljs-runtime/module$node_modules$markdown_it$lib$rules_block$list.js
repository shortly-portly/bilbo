shadow$provide.module$node_modules$markdown_it$lib$rules_block$list=function(global,require,module,exports){function skipBulletListMarker(state,startLine){var pos=state.bMarks[startLine]+state.tShift[startLine];var max=state.eMarks[startLine];startLine=state.src.charCodeAt(pos++);return 42!==startLine&&45!==startLine&&43!==startLine||pos<max&&(state=state.src.charCodeAt(pos),!isSpace(state))?-1:pos}function skipOrderedListMarker(state,startLine){var start=state.bMarks[startLine]+state.tShift[startLine],
pos=start,max=state.eMarks[startLine];if(pos+1>=max)return-1;startLine=state.src.charCodeAt(pos++);if(48>startLine||57<startLine)return-1;for(;;){if(pos>=max)return-1;startLine=state.src.charCodeAt(pos++);if(48<=startLine&&57>=startLine){if(10<=pos-start)return-1}else{if(41===startLine||46===startLine)break;return-1}}return pos<max&&(startLine=state.src.charCodeAt(pos),!isSpace(startLine))?-1:pos}var isSpace=require("module$node_modules$markdown_it$lib$common$utils").isSpace;module.exports=function(state,
startLine,endLine,silent){var initial,l;var markerCharCode=!1;var tight=!0;if(4<=state.sCount[startLine]-state.blkIndent||0<=state.listIndent&&4<=state.sCount[startLine]-state.listIndent&&state.sCount[startLine]<state.blkIndent)return!1;silent&&"paragraph"===state.parentType&&state.tShift[startLine]>=state.blkIndent&&(markerCharCode=!0);if(0<=(l=skipOrderedListMarker(state,startLine))){var isOrdered=!0;var listLines=state.bMarks[startLine]+state.tShift[startLine];listLines=Number(state.src.substr(listLines,
l-listLines-1));if(markerCharCode&&1!==listLines)return!1}else if(0<=(l=skipBulletListMarker(state,startLine)))isOrdered=!1;else return!1;if(markerCharCode&&state.skipSpaces(l)>=state.eMarks[startLine])return!1;markerCharCode=state.src.charCodeAt(l-1);if(silent)return!0;silent=state.tokens.length;if(isOrdered){var ch=state.push("ordered_list_open","ol",1);1!==listLines&&(ch.attrs=[["start",listLines]])}else ch=state.push("bullet_list_open","ul",1);ch.map=listLines=[startLine,0];ch.markup=String.fromCharCode(markerCharCode);
var contentStart=startLine;var prevEmptyEnd=!1;var terminatorRules=state.md.block.ruler.getRules("list");var oldParentType=state.parentType;for(state.parentType="list";contentStart<endLine;){var indent=l;var i=state.eMarks[contentStart];for(initial=l=state.sCount[contentStart]+l-(state.bMarks[startLine]+state.tShift[startLine]);indent<i;){ch=state.src.charCodeAt(indent);if(9===ch)l+=4-(l+state.bsCount[contentStart])%4;else if(32===ch)l++;else break;indent++}contentStart=indent;indent=contentStart>=
i?1:l-initial;4<indent&&(indent=1);indent=initial+indent;ch=state.push("list_item_open","li",1);ch.markup=String.fromCharCode(markerCharCode);ch.map=initial=[startLine,0];var oldTight=state.tight;var oldTShift=state.tShift[startLine];var oldSCount=state.sCount[startLine];ch=state.listIndent;state.listIndent=state.blkIndent;state.blkIndent=indent;state.tight=!0;state.tShift[startLine]=contentStart-state.bMarks[startLine];state.sCount[startLine]=l;contentStart>=i&&state.isEmpty(startLine+1)?state.line=
Math.min(state.line+2,endLine):state.md.block.tokenize(state,startLine,endLine,!0);if(!state.tight||prevEmptyEnd)tight=!1;prevEmptyEnd=1<state.line-startLine&&state.isEmpty(state.line-1);state.blkIndent=state.listIndent;state.listIndent=ch;state.tShift[startLine]=oldTShift;state.sCount[startLine]=oldSCount;state.tight=oldTight;ch=state.push("list_item_close","li",-1);ch.markup=String.fromCharCode(markerCharCode);contentStart=startLine=state.line;initial[1]=contentStart;if(contentStart>=endLine)break;
if(state.sCount[contentStart]<state.blkIndent)break;if(4<=state.sCount[startLine]-state.blkIndent)break;initial=!1;i=0;for(l=terminatorRules.length;i<l;i++)if(terminatorRules[i](state,contentStart,endLine,!0)){initial=!0;break}if(initial)break;l=isOrdered?skipOrderedListMarker(state,contentStart):skipBulletListMarker(state,contentStart);if(0>l)break;if(markerCharCode!==state.src.charCodeAt(l-1))break}ch=isOrdered?state.push("ordered_list_close","ol",-1):state.push("bullet_list_close","ul",-1);ch.markup=
String.fromCharCode(markerCharCode);listLines[1]=contentStart;state.line=contentStart;state.parentType=oldParentType;if(tight)for(startLine=state.level+2,endLine=silent+2,isOrdered=state.tokens.length-2;endLine<isOrdered;endLine++)state.tokens[endLine].level===startLine&&"paragraph_open"===state.tokens[endLine].type&&(state.tokens[endLine+2].hidden=!0,state.tokens[endLine].hidden=!0,endLine+=2);return!0}}
//# sourceMappingURL=module$node_modules$markdown_it$lib$rules_block$list.js.map
